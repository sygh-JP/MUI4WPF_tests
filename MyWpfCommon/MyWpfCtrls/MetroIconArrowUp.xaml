<UserControl
    x:Class="MyWpfCtrls.MetroIconArrowUp"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d" 
    Width="22"
    Height="22"
    Name="userCtrl"
    Background="White"
    IsHitTestVisible="False"
    Foreground="{DynamicResource ResourceKey=ButtonText}">
    <!--
    別にここでサブコンポーネント DLL 内のクラスにて使われている ResourceDictionary を明示指定しなくても、
    EXE 側の App.xaml でインクルードしているので実行時にはきちんと解決されるが、
    EXE 側の XAML デザイン時に「～のインスタンスを作成できません。」というエラーが発生してしまう。
    ソリューションのリビルドを行なうと解決できることがある。
    なお、EXE 側の App.xaml に、個別ではなく MergedDictionaries によって統合されたひとつの DLL 内 XAML ファイルを指定すると、
    リソースが見つからない旨のエラーメッセージを XAML エディターが出すが、実行時にはきちんと解決される。
    http://msdn.microsoft.com/ja-jp/library/bb546934%28v=vs.90%29.aspx#ResourcesatDesignTime
    -->
    <!--
    <UserControl.Resources>
        <ResourceDictionary Source="/MyWpfCommon;component/Resources/MyIconResDictionary.xaml"/>
    </UserControl.Resources>
    -->

    <!-- HACK: UserControl や PathGeometry を使う方法はオーバーヘッドが大きい。インタラクティブ性が不要な単純アイコンであれば、StreamGeometry を使ったほうが良い。 -->
    <!--
    PathGeometry.ToString() を使ってパスのミニ言語に変換する方法がある模様。
    http://stackoverflow.com/questions/4437189/convert-a-geometry-to-a-path-in-wpf-with-blend
    -->
    <Canvas>
        <Ellipse Name="ellipse1" Width="22" Height="22" StrokeThickness="2" Stroke="{Binding ElementName=userCtrl, Path=Foreground}"></Ellipse>
        <Line Name="line1" X1="6" Y1="10" X2="11" Y2="6" StrokeThickness="2" Stroke="{Binding ElementName=userCtrl, Path=Foreground}"/>
        <Line Name="line2" X1="16" Y1="10" X2="11" Y2="6" StrokeThickness="2" Stroke="{Binding ElementName=userCtrl, Path=Foreground}"/>
        <Line Name="line3" X1="6" Y1="14" X2="11" Y2="10" StrokeThickness="2" Stroke="{Binding ElementName=userCtrl, Path=Foreground}"/>
        <Line Name="line4" X1="16" Y1="14" X2="11" Y2="10" StrokeThickness="2" Stroke="{Binding ElementName=userCtrl, Path=Foreground}"/>
    </Canvas>
</UserControl>
